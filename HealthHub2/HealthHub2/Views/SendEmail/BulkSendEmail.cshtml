@model HealthHub2.Models.SendEmailViewModel
@{
    ViewBag.Title = "Bulk Send Email";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("FinishBulkSendEmail", "SendEmail", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    if (@ViewBag.Result != null)
    {
        <div class="alert alert-info">@ViewBag.Result</div>
    }

    <div class="form-horizontal col-lg-6">
        <h4>Bulk Send Email</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.Label("ToEmail", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var emailArray = ViewBag.ToEmail.Split(new[] { ", " }, StringSplitOptions.None);
                    var rowCount = emailArray.Length;
                }
                <textarea class="form-control" readonly rows="@rowCount">@ViewBag.ToEmail.Replace(", ", "\n")</textarea>
                <input type="hidden" name="emailAddresses" value="@ViewBag.ToEmail" />
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Contents, new { @class = "form-control", rows = "10" })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="Attachment" id="Attachment" class="form-control" />
            </div>
        </div>

        <div class="form-group row mt-2">
            <div class="col-md-10">
                <div style="display: flex; justify-content: space-between;">
                    <input type="submit" value="Send" class="btn btn-primary" />
                    @Html.ActionLink("Back", "Index", null, new { @class = "btn btn-secondary" })
                </div>
            </div>
        </div>


    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
